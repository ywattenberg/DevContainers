{
  // For quick reference: https://containers.dev/implementors/json_reference/
  "name": "Miniforge3",
  "image": "condaforge/miniforge3:latest",
  //"build": {
  //	"context": "..",
  //	"dockerfile": "Dockerfile"
  //},

  // 1. Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": []

  // 2. Use 'mounts' to make a list of local directories available inside the container. More info: https://code.visualstudio.com/remote/advancedcontainers/add-local-file-mount
  // "mounts": [],

  // 3. Use 'runArgs' to pass arguments to the container.
  // run the container with all GPUs
  "runArgs": ["--gpus", "all"],

  // 4. Features to add to the Dev Container. More info: https://containers.dev/implementors/features.
  "features": {
    // ZSH without OMZ
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": "true",
      "configureZshAsDefaultShell": "true",
      "installOhMyZsh": "true",
      "installOhMyZshConfig": "true",
      "username": "vscode",
      "userUid": "1000",
      "userGid": "1000",
      "upgradePackages": "true"
    },
    // git
    "ghcr.io/devcontainers/features/git:1": {
      "version": "os-provided",
      "ppa": "false"
    }
  },

  // 5. Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "python.defaultInterpreterPath": "/home/vscode/.conda/envs/env/bin/python"
      },
      // installs useful extensions
      "extensions": [
        "ms-python.python",
        "ms-python.debugpy",
        "ms-python.vscode-pylance",
        "ms-python.isort",
        "ms-python.black-formatter",
        "ms-python.mypy",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-slideshow",
        "ms-toolsai.tensorboard",
        "charliermarsh.ruff"
      ]
    }
  },

  // 6. Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",

  // the following commands are related to container lifecylce. More info: https://containers.dev/implementors/json_reference/#lifecycle-scripts

  // 7. Use 'initializeCommand' to run commands ON THE HOST before container is created or started.
  // "initializeCommand": "",

  // 8. Use 'onCreateCommand' to run commands INSIDE THE CONTAINER after it started for the first time.
  "onCreateCommand": "conda init zsh && conda env create -n env -f environment.yml && conda clean -a --yes"

  // 9. Use 'updateContentCommand' to run commands if the root filetree have any changes, during container creation.
  // "updateContentCommand": "",

  // 10. Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "conda env update --yes -n base -f environment.yml && conda clean --yes --all"

  // 11. Use 'postStartCommand' to run a command each time the container starts successfully.
  // "postStartCommand": "",

  // 12. Use 'postAttachCommand' to run a command each time a tool attaches to the container successfully.
  // "postAttachCommand": "conda activate env"
}
